---
 - name:  provisioning EC2 instances using Ansible
   hosts: localhost
   connection: local
   gather_facts: False
   tags: provisioning

   vars:
     keypair: "{{ key_pair }}"
     instance_type: t2.micro
     image: "{{ image_ec2  }}"
     wait: yes
     group: webserver
     count: 1
     region: "{{ region_ec2 }}"
     security_group: my-jenkins-security-grp
   tasks:
     - name: Task # 1 - Create my security group
       local_action:
         module: ec2_group
         name: "{{ security_group }}"
         description: Security Group for webserver Servers
         region: "{{ region }}"
         rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 8080
              to_port: 8080
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
         rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
       register: basic_firewall
     - name: Task # 2 Launch the new EC2 Instance
       local_action:  ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
       register: ec2
     - name: Task # 3 Add Tagging to EC2 instance
       local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
       with_items: "{{ ec2.instances }}"
       args:
         tags:
           Name: EC22_Instance
     - name: Sleep for 120 seconds and continue with play
       wait_for:
            timeout: 120
     - name: fetch
       set_fact:
              public_dns: "{{ ec2.instances[0].public_dns_name }}"
     - name: adding limit to patching
       tower_job_template:
         name: "Patching_os"
         limit: " {{ public_dns }}"
         job_type: "run"
         project: "CreationOfEc2Instances"
         playbook: "ec2_patching_Os.yml"
         tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
         tower_username: "{{ lookup ('env', 'TOWER_USERNAME') }}"
         tower_password: "{{ lookup ('env', 'TOWER PASSWORD') }}"
         validate_certs: no
         state: "present"                                                                                                                                                     
